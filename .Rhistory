data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300) +
theme_bw()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300) +
theme_blank()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300) +
theme_minimal()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300) +
theme_void()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3000, xend = 2500, y = 300, yend = 1050)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300) +
theme_void()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3000, xend = 2500, y = 300, yend = 1050)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3000, xend = 2500, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3000, xend = 2500, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3000, xend = 2500, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3000, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2500, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3000, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3000, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2500, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3000, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3500, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3000, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3500, 1000) +
ylim(1100, 300)
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2500, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void()
data_proto %>%
filter(study == "Hagiwara (1997)" & gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void()
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void()
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point() +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 50))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 16) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_label(size = 16) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
geom_text(nudge_x = 50, nudge_y = -10) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_text(nudge_x = 50, nudge_y = -10, size = 16) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_text(nudge_x = 50, nudge_y = -10, size = 10) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_text(nudge_x = 50, nudge_y = -10, size = 8) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_text(nudge_x = 50, nudge_y = -10, size = 6) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
data_proto %>%
# Set study
filter(study == "Hagiwara (1997)") %>%
# Set gender
filter(gender == "female") %>%
ggplot(aes(x = f2, y = f1, label = vowel)) +
geom_point(size = 4) +
geom_text(nudge_x = 60, nudge_y = -20, size = 6) +
geom_segment(aes(x = 3050, xend = 2000, y = 300, yend = 1050)) +
geom_segment(aes(x = 2000, xend = 1000, y = 1050, yend = 1050)) +
geom_segment(aes(x = 1000, xend = 1000, y = 1050, yend = 300)) +
geom_segment(aes(x = 1000, xend = 3050, y = 300, yend = 300)) +
xlim(3100, 1000) +
ylim(1100, 300) +
theme_void() +
theme(text = element_text(size = 16))
library(shiny)
install.packages("shiny")
shiny::runApp()
runApp()
runApp()
runApp()
data_proto = read.table("data/data_prototypes.txt", header=T, sep="\t")
xtabs(~study, data_proto)
runApp()
runApp()
runApp()
help("ScaleContinuous")
help("scale_continuous")
runApp()
runApp()
data_proto = read.table("data/data_prototypes.txt", header=T, sep="\t") %>%
mutate(vowel_ipa = if_else(vowel == "E", "ɛ",
if_else(vowel == "I", "ɪ",
if_else(vowel == "ae", "æ",
if_else(vowel == "^", "ʌ",
if_else(vowel == "a", "ɑ",
if_else(vowel == "c", "ɔ",
if_else(vowel == "er", "ɝ", vowel))))))))
data_proto = read.table("data/data_prototypes.txt", header=T, sep="\t") %>%
mutate(vowel_ipa = if_else(vowel == "E", "ɛ", vowel))
data_proto = read.table("data/data_prototypes.txt", header=T, sep="\t") %>%
mutate(vowel_ipa = if_else(vowel == "E", "ɛ", as.character(vowel)))
head(data_proto)
data_proto = read.table("data/data_prototypes.txt", header=T, sep="\t") %>%
mutate(vowel_ipa = if_else(vowel == "E", "ɛ",
if_else(vowel == "I", "ɪ",
if_else(vowel == "ae", "æ",
if_else(vowel == "^", "ʌ",
if_else(vowel == "a", "ɑ",
if_else(vowel == "c", "ɔ",
if_else(vowel == "er", "ɝ", as.character(vowel)))))))))
head(data_proto)
runApp()
levels(data_proto$study)
reverse(levels(data_proto$study))
arrange(levels(data_proto$study)
)
rev(levels(data_proto$study))
runApp()
help("tags")
runApp()
runApp()
install.packages("PraatR")
install.packages("devtools")
devtools:::install_github("usagi5886/PraatR")
library(PraatR)
source("scripts/vowel_feedback_packages.R")
install.packages("seewave")
install.packages("tuneR")
help(readWave)
source("scripts/vowel_feedback_packages.R")
help(readWave)
data_wav = paste("data/recordings/", vowel, "_", gender, ".wav", sep="")
vowel = "i"
gender = "male"
data_wav = paste("data/recordings/", vowel, "_", gender, ".wav", sep="")
sound = readWave(data_wav)
library(seewave)
library(tuneR)
sound = readWave(data_wav)
formant_loc = "sound.Formant"
formant_loc = "sound.Formant"
test = praat("To Formant (burg)...",
arguments = list(0.05, 5, 4000, 2, 3),
input = sound,
output = formant_loc)
AudioFilename = paste(vowel, "_", gender,".wav",sep="")
head(AudioFilename)
FormantFilename = paste(vowel, "_", gender,".wav",sep="")
FormantArguments = list( 0.001, # Time step (s)
5,     # Max. number of formants
5500,  # Maximum formant (Hz)
0.025, # Window length (s)
50    )# Pre-emphasis from (Hz)
getwd()
paste(getwd(), "/data/recordings/", AudioFilename)
paste(getwd(), "/data/recordings/", AudioFilename, sep="")
praat( "To Formant (burg)...",
arguments = FormantArguments,
input = paste(getwd(), "/data/recordings/", AudioFilename, sep=""),
output = paste(getwd(), "/data/recordings/", FormantFilename, sep="")
) # End praat()
FormantFilename = paste(vowel, "_", gender,".Formant",sep="")
praat( "To Formant (burg)...",
arguments = FormantArguments,
input = paste(getwd(), "/data/recordings/", AudioFilename, sep=""),
output = paste(getwd(), "/data/recordings/", FormantFilename, sep="")
) # End praat()
# Set the parameters for the formant analysis
FormantArguments = list( 0.001, # Time step (s)
5,     # Max. number of formants
5000,  # Maximum formant (Hz) <- change to be based on gender
0.025, # Window length (s)
50    )# Pre-emphasis from (Hz)
formant_arguments = list( 0.001, # Time step (s)
5,     # Max. number of formants
5000,  # Maximum formant (Hz) <- change to be based on gender
0.025, # Window length (s)
50    )# Pre-emphasis from (Hz)
# Get formant information from a sound file
formants_extracter = function(vowelfile, formant_arguments) {
# Set location paths for wav files and formant files, Note: spaces not allowed in path
wav_loc = paste(getwd(), "/", vowelfile, sep = "")
formant_loc = sub(wav_loc, pattern = ".wav", replacement = ".Formant")
table_loc = sub(wav_loc, pattern = ".wav", replacement = ".txt")
tab_args = list( TRUE, # Include frame number
TRUE, # Include time
3,    # Time decimals
TRUE, # Include intensity
3,    # Intensity decimals
TRUE, # Include number of formants
3,    # Frequency decimals
TRUE )# Include bandwidths
praat("To Formant (burg)...",
arguments = formant_arguments,
input = wav_loc,
output = formant_loc)
praat("Down to Table...",
arguments = tab_args,
input = formant_loc,
output = table_loc,
filetype = "tab-separated")
read.table(file = table_loc, header=TRUE, sep="\t", na.strings="--undefined--" ) %>%
mutate(group_id_final = curr_group) %>%
mutate(vowel_id_final = curr_vowel) %>%
gather(formant, value, F1.Hz.:B5.Hz.) %>%
filter(formant == "F1.Hz." | formant == "F2.Hz." | formant == "F3.Hz.") %>%
mutate(formant = factor(formant, levels = c("F1.Hz.", "F2.Hz.", "F3.Hz."),
labels = c("F1", "F2", "F3"))) %>%
mutate(time_s = time.s. + vowelfile$time_start[line])
}
data_formants = formants_extracter(data_wav, formanta_arguments)
data_formants = formants_extracter(data_wav, formant_arguments)
# Get formant information from a sound file
formants_extracter = function(vowelfile, formant_arguments) {
# Set location paths for wav files and formant files, Note: spaces not allowed in path
wav_loc = paste(getwd(), "/", vowelfile, sep = "")
formant_loc = sub(wav_loc, pattern = ".wav", replacement = ".Formant")
table_loc = sub(wav_loc, pattern = ".wav", replacement = ".txt")
tab_args = list( TRUE, # Include frame number
TRUE, # Include time
3,    # Time decimals
TRUE, # Include intensity
3,    # Intensity decimals
TRUE, # Include number of formants
3,    # Frequency decimals
TRUE )# Include bandwidths
praat("To Formant (burg)...",
arguments = formant_arguments,
input = wav_loc,
output = formant_loc)
praat("Down to Table...",
arguments = tab_args,
input = formant_loc,
output = table_loc,
filetype = "tab-separated")
read.table(file = table_loc, header=TRUE, sep="\t", na.strings="--undefined--" ) %>%
gather(formant, value, F1.Hz.:B5.Hz.) %>%
filter(formant == "F1.Hz." | formant == "F2.Hz." | formant == "F3.Hz.") %>%
mutate(formant = factor(formant, levels = c("F1.Hz.", "F2.Hz.", "F3.Hz."),
labels = c("F1", "F2", "F3"))) %>%
mutate(time_s = time.s. + vowelfile$time_start[line])
}
data_formants = formants_extracter(data_wav, formant_arguments)
data_formants = formants_extracter(data_wav, formant_arguments)
